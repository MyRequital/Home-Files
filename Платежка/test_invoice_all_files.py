# ====== –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –∏ –ø—Ä–æ—á–µ–µ ======
import asyncio
import os
import uuid

from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from dotenv import load_dotenv
from yookassa import Payment

from _configs.log_config import logger
from tools.delete_message import delete_message_safe
from ykassa_payments import invoices


load_dotenv()


# ====== –ë–ª–æ–∫ —Å–æ–∑–¥–∞–Ω–∏—è –û–ë–™–ï–ö–¢–ê –ø–ª–∞—Ç–µ–∂–∞ ======
def create_invoice(user_id,             # –ê—Ä–≥—É–º–µ–Ω—Ç user_id, –ø–µ—Ä–µ–¥–∞—é—â–∏–π—Å—è –∫–∞–∫ metadata –ø–ª–∞—Ç–µ–∂–∞
                   cost: int,           # –ê—Ä–≥—É–º–µ–Ω—Ç —Ü–µ–Ω—ã (int) —Ç–æ–≤–∞—Ä–∞\—É—Å–ª—É–≥–∏
                   task: str,           # –ê—Ä–≥—É–º–µ–Ω—Ç –Ω–æ–º–µ—Ä–∞ –∑–∞–¥–∞–Ω–∏—è –ø–æ –º–æ–¥—É–ª—é
                   material_name: str   # –ê—Ä–≥—É–º–µ–Ω—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞
                   ):

    return Payment.create({             # –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –û–ë–™–ï–ö–¢–ê –ø–ª–∞—Ç–µ–∂–∞
        "amount": {                     # –°—Ç–æ–∏–º–æ—Å—Ç—å
            "value": f"{cost}.00",          # –¶–µ–Ω–∞
            "currency": "RUB"               # –í–∞–ª—é—Ç–∞
        },
        "payment_method_data": {        # –¢–∏–ø –æ–ø–ª–∞—Ç—ã
            "type": "bank_card"             # –í—ã–±–æ—Ä —Ç–∏–ø–∞
        },
        "confirmation": {               # "–ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏—é"
            "type": "redirect",                             # –î–µ–π—Å—Ç–≤–∏–µ (—Ä–µ–¥–∏—Ä–µ–∫—Ç - –ø–µ—Ä–µ—Å—ã–ª–∫–∞)
            "return_url": "https://t.me/EroNoSekaiBot"      # –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –∫—É–¥–∞ (—Ç–æ –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç —Å–∞–π—Ç –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã)
        },
        'metadata': {                   # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞
            'user_id': user_id              # –¢–æ —á—Ç–æ –º—ã –¥–∞–µ–º –≤ –º–µ—Ç–∞–¥–∞—Ç—É (user_id)
        },
        "capture": True,
        "description": f"–°–±–æ—Ä–Ω–∏–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è –∑–∞–¥–∞–Ω–∏—è {task} –ø–æ {material_name}"      # –û–ø–∏—Å–∞–Ω–∏–µ
    },
        str(uuid.uuid4())   # –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∫–ª—é—á–∞-–ø–ª–∞—Ç–µ–∂–∞
    )

# ====== –ë–ª–æ–∫ –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è (—Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–∏–∑—É–∞–ª) –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ ======
account_number = os.getenv('YOOMONEY_ACCOUNT')  # –ù–æ–º–µ—Ä —Å—á–µ—Ç–∞ –ÆMoney –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

async def send_payment_message(callback: types.CallbackQuery, # CallbackQuery –æ—Ç aiogram
                               item_name: str,                   # –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞/—É—Å–ª—É–≥–∏
                               subject_to_return,            # callback –¥–ª—è (–æ—Ç–º–µ–Ω—ã) –ø–ª–∞—Ç–µ–∂–∞ "—Ç–æ –∫—É–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è (–æ—Ç–º–µ–Ω–∞)"
                               cost: int = 0,                  # –¶–µ–Ω–∞ (int) —Ç–æ–≤–∞—Ä–∞/—É—Å–ª—É–≥–∏, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 0
                               task: str = "",                 # –ù–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
                               material_name: str = ""):  # –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞

    global account_number  # –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –Ω–æ–º–µ—Ä–æ–º —Å—á–µ—Ç–∞ –ÆMoney

    user_id = callback.from_user.id  # user_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–≤—à–µ–≥–æ callback

    task_invoice = invoices.create_invoice(user_id,  # –°–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–∞
                                           cost=cost,  # –ü–µ—Ä–µ–¥–∞—á–∞ —Ü–µ–Ω—ã
                                           task=task,  # –ü–µ—Ä–µ–¥–∞—á–∞ –Ω–æ–º–µ—Ä–∞ –∑–∞–¥–∞–Ω–∏—è
                                           material_name=material_name  # –ü–µ—Ä–µ–¥–∞—á–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞
                                           )

    payment_id, value, currency, description, payment_link = (  # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å—á–µ—Ç–∞
        task_invoice.id, task_invoice.amount['value'], task_invoice.amount['currency'],  # ID, —Ü–µ–Ω–∞, –≤–∞–ª—é—Ç–∞
        task_invoice.description, task_invoice.confirmation.confirmation_url  # –û–ø–∏—Å–∞–Ω–∏–µ, —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    )

    support_url = "https://t.me/ZorngeistQual"                  # URL –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    payment_message = await callback.message.answer(            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–ª–∞—Ç–µ–∂–µ
        f'üí∞ –û–ø–ª–∞—Ç–∞: {item_name}\n\n'                            # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–ø–ª–∞—Ç–µ
        f'üí≥ –°—á—ë—Ç: {payment_id}\n'                               # –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—á–µ—Ç–æ–º
        f'üìå –°—É–º–º–∞: {value} {currency}\n\n'                       # –°–æ–æ–±—â–µ–Ω–∏–µ —Å —Å—É–º–º–æ–π
        f'‚ùóÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –∫–∞—Ä—Ç—ã –†–§ –∏ –ø–ª–∞—Ç—ë–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ú–ò–†.\n\n'  # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        f'üëá –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ–ø–ª–∞—Ç–µ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è {item_name}.\n\n'  # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
        f'üí¨ –í —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.\n\n'  # –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É
        f'üí° –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–π '  # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
        f'{item_name}. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: ZorngeistQual\n\n'  # –°—Å—ã–ª–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        f'‚ö†Ô∏è –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã.',  # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ–± —É–¥–∞–ª–µ–Ω–∏–∏
        disable_web_page_preview=True,  # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã
        reply_markup=payment_keyboard(payment_link, subject_to_return)  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ–ø–ª–∞—Ç—ã
    )

    return payment_message  # –í–æ–∑–≤—Ä–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è


# ====== –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–ª–∞—Ç–µ–∂–æ–º ======
async def handle_task(callback: types.CallbackQuery,  # CallbackQuery –æ—Ç aiogram
                      task_id: str,                       # ID –∑–∞–¥–∞–Ω–∏—è
                      item_name: str,                     # –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞/—É—Å–ª—É–≥–∏
                      cost: int = 100,                    # –¶–µ–Ω–∞ (int) —Ç–æ–≤–∞—Ä–∞/—É—Å–ª—É–≥–∏, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 100
                      material_name: str = "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",  # –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"
                      subject_to_return: str = "subject_math"): # callback –¥–ª—è (–æ—Ç–º–µ–Ω—ã) –ø–ª–∞—Ç–µ–∂–∞ "—Ç–æ –∫—É–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è (–æ—Ç–º–µ–Ω–∞)", –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "subject_math"
    try:
        task_invoice = create_invoice(              # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Å—á–µ—Ç–∞
            user_id=callback.from_user.id,          # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            cost=cost,                              # –¶–µ–Ω–∞
            task=task_id,                           # ID –∑–∞–¥–∞–Ω–∏—è
            material_name=material_name             # –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
        )

        initial_message = await callback.message.answer( # –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∑–∞–¥–∞–Ω–∏–µ {task_id}\n–°–æ–∑–¥–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É..." # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        )

        await initial_message.edit_text("–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –≥–æ—Ç–æ–≤–∞!") # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        _ = asyncio.create_task(delete_message_safe(initial_message, 2)) # –£–¥–∞–ª–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã

        payment_message = await send_payment_message( # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–ª–∞—Ç–µ–∂–µ
            callback, # CallbackQuery
            item_name=item_name, # –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞/—É—Å–ª—É–≥–∏
            subject_to_return=subject_to_return, # callback –¥–ª—è (–æ—Ç–º–µ–Ω—ã) –ø–ª–∞—Ç–µ–∂–∞ "—Ç–æ –∫—É–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è (–æ—Ç–º–µ–Ω–∞)"
            cost=cost, # –¶–µ–Ω–∞
            task=task_id, # ID –∑–∞–¥–∞–Ω–∏—è
            material_name=material_name # –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
        )

        if payment_message: # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–ª–∞—Ç–µ–∂–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
            _ = asyncio.create_task(delete_message_safe(payment_message, 120)) # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–ª–∞—Ç–µ–∂–µ —á–µ—Ä–µ–∑ 120 —Å–µ–∫—É–Ω–¥

    except Exception as e: # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–¥–∞–Ω–∏—è {task_id}: {e}") # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
        await callback.message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.") # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ


# ====== –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–∞–±–æ—Ç—ã —Å –ø–ª–∞—Ç–µ–∂–æ–º ======
def payment_keyboard(url, subject_to_return):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ–ø–ª–∞—Ç—ã
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç:
        url - —Å—Å—ã–ª–∫–∞ –ø–ª–∞—Ç–µ–∂–∞
        subject_to_return - –∫–æ–ª–±—ç–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –ø—Ä–æ—à–ª–æ–µ –º–µ–Ω—é
    :param url:
    :param subject_to_return:
    :return:
    """
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∏—Ç—å', url=url),
                InlineKeyboardButton(text='–û—Ç–∫–∞–∑', callback_data="refusal")
            ]
        ]
    )

